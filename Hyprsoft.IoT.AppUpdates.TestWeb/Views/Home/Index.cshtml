<div class="jumbotron mt-3">
    <h1 class="display-4 text-primary">App Updates</h1>
    <p class="lead">Remotely update .NET Core 2.2 apps running on IoT devices running Linux or Windows 10 IoT Core.</p>
    <hr class="my-4">
    <p>
        This functionality can be added to any existing ASP.NET Core 2.2 MVC website by adding the Hyprsoft.IoT.AppUpdates.Web Nuget package
        and the code below in <b>bold</b> to the Program and Startup classes.
    </p>
    <a class="btn btn-primary" href="~/appupdates" role="button">Get Started</a>
</div>
<p>
    <code>
        <pre>
public class Program
{
    public static void Main(string[] args)
    {
        CreateWebHostBuilder(args).Build().Run();
    }

    public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>
        WebHost.CreateDefaultBuilder(args)
        .UseStartup<Startup>()
        <b>.UseAppUpdates();</b>
}

public class Startup
{
    public Startup(IConfiguration configuration, <b>IHostingEnvironment env</b>)
    {
        Configuration = configuration;
        <b>HostingEnvironment = env;</b>
    }

    public IConfiguration Configuration { get; }

        <b>public IHostingEnvironment HostingEnvironment { get; }</b>

    public void ConfigureServices(IServiceCollection services)
    {
        <b>services.AddAppUpdates(options =>
        {
            options.ManifestUri = new Uri(Path.Combine(HostingEnvironment.WebRootPath, UpdateManager.DefaultManifestFilename));
            options.ClientCredentials.ClientId = Configuration["AppUpdates:ClientId"];
            options.ClientCredentials.ClientSecret = Configuration["AppUpdates:ClientSecret"];
            options.ClientCredentials.Scope = options.TokenOptions.Audience;
            options.TokenOptions.SecurityKey = Configuration["AppUpdates:SecurityKey"];
        });</b>
        services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);
    }

    public void Configure(IApplicationBuilder app)
    {
        if (<b>HostingEnvironment</b>.IsDevelopment())
            app.UseDeveloperExceptionPage();
        else
            app.UseExceptionHandler("/Home/Error");

        <b>app.UseAppUpdates();</b>
        app.UseMvc(routes => routes.MapRoute(name: "default", template: "{controller=Home}/{action=Index}/{id?}"));
    }
}
            </pre>
    </code>
</p>
